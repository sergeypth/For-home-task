{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Задание 1\n",
    "\n",
    "Нужно помочь секретарю автоматизировать работу. Для этого нужно написать программу, которая будет на основе хранимых данных исполнять пользовательские команды."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#1. перечень всех документов\n",
    "documents = [\n",
    "{'type': 'passport', 'number': '2207 876234', 'name': 'Василий Гупкин'},\n",
    "{'type': 'invoice', 'number': '11-2', 'name': 'Геннадий Покемонов'},\n",
    "{'type': 'insurance', 'number': '10006', 'name': 'Аристарх Павлов'}\n",
    "]\n",
    "#2.перечень полок, на которых хранятся документы (если документ есть в documents, то он обязательно должен быть и в directories)\n",
    "directories = {\n",
    "'1': ['2207 876234', '11-2'],\n",
    "'2': ['10006'],\n",
    "'3': []\n",
    "}\n",
    "\n",
    "# Пункт 1. Пользователь по команде “p” может узнать владельца документа по его номеру\n",
    "\n",
    "def document_owner(documents_ = documents):\n",
    "    doc_number = input('Введите номер документа: ')\n",
    "    for document in documents_:\n",
    "        if document['number'] == doc_number:\n",
    "            return f'Владелец документа: {document[\"name\"]}'\n",
    "    \n",
    "    return f'Документ с № {doc_number} не найден в базе'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Пункт 2. Пользователь по команде “s” может по номеру документа узнать на какой полке он хранится\n",
    "\n",
    "def storage_shelf(directories_ = directories):\n",
    "    doc_number = input('Введите номер документа: ')\n",
    "    for shelf, number_list in directories_.items():\n",
    "        if doc_number in number_list:\n",
    "            return f'Документ хранится на полке: \"{shelf}\"'\n",
    "    return f'Документ с № {doc_number} не найден в базе'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Пункт 4. Пользователь по команде “as” может добавить новую полку \n",
    "\n",
    "def new_shelf():\n",
    "    number_new = input('Введите номер полки: ')\n",
    "    if number_new not in list(directories.keys()):\n",
    "        directories[number_new] = []\n",
    "        print('Полка добавлена. Текущий перечень полок: ', end='')\n",
    "        print(*list(directories.keys()), sep=', ')\n",
    "    else:\n",
    "        print('Такая полка уже существует. Текущий перечень полок: ', end='')\n",
    "        print(*list(directories.keys()), sep=', ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Пункт 3. Пользователь по команде “l” может увидеть полную информацию по всем документам \n",
    "def full_information():\n",
    "    for info in documents:\n",
    "        for key, value in directories.items():\n",
    "            for Value_ in value:\n",
    "                if info['number'] == Value_:\n",
    "                    print('№:', info['number'] , 'тип:' , info['type'] , 'владелец:' , info['name'] , 'полка хранения:' , key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Пункт 5. Пользователь по команде “ds” может удалить существующую полку из данных (только если она пустая)\n",
    "\n",
    "def del_shelf():\n",
    "    number_del = input('Введите номер полки: ')\n",
    "    if number_del in list(directories.keys()) and directories[number_del] == []:\n",
    "        del directories[number_del]\n",
    "        print('Полка удалена. Текущий перечень полок: ', end='')\n",
    "        print(*list(directories.keys()), sep=', ')\n",
    "    elif number_del in directories and directories[number_del] != []:\n",
    "        print('На полке есть документы, удалите их перед удалением полки. Текущий перечень полок: ', end='')\n",
    "        print(*list(directories.keys()), sep=', ')\n",
    "    else:\n",
    "        print('Такой полки не существует. Текущий перечень полок: ', end='')\n",
    "        print(*list(directories.keys()), sep=', ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
