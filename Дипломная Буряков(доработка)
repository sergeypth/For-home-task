{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from matplotlib import colors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 1. Загрузите файл HR.csv в pandas dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>last_evaluation</th>\n",
       "      <th>number_project</th>\n",
       "      <th>average_montly_hours</th>\n",
       "      <th>time_spend_company</th>\n",
       "      <th>Work_accident</th>\n",
       "      <th>left</th>\n",
       "      <th>promotion_last_5years</th>\n",
       "      <th>department</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.38</td>\n",
       "      <td>0.53</td>\n",
       "      <td>2</td>\n",
       "      <td>157</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>sales</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.80</td>\n",
       "      <td>0.86</td>\n",
       "      <td>5</td>\n",
       "      <td>262</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>sales</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.11</td>\n",
       "      <td>0.88</td>\n",
       "      <td>7</td>\n",
       "      <td>272</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>sales</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.72</td>\n",
       "      <td>0.87</td>\n",
       "      <td>5</td>\n",
       "      <td>223</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>sales</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.37</td>\n",
       "      <td>0.52</td>\n",
       "      <td>2</td>\n",
       "      <td>159</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>sales</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14994</th>\n",
       "      <td>0.40</td>\n",
       "      <td>0.57</td>\n",
       "      <td>2</td>\n",
       "      <td>151</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>support</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14995</th>\n",
       "      <td>0.37</td>\n",
       "      <td>0.48</td>\n",
       "      <td>2</td>\n",
       "      <td>160</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>support</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14996</th>\n",
       "      <td>0.37</td>\n",
       "      <td>0.53</td>\n",
       "      <td>2</td>\n",
       "      <td>143</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>support</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14997</th>\n",
       "      <td>0.11</td>\n",
       "      <td>0.96</td>\n",
       "      <td>6</td>\n",
       "      <td>280</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>support</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14998</th>\n",
       "      <td>0.37</td>\n",
       "      <td>0.52</td>\n",
       "      <td>2</td>\n",
       "      <td>158</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>support</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14999 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       satisfaction_level  last_evaluation  number_project  \\\n",
       "0                    0.38             0.53               2   \n",
       "1                    0.80             0.86               5   \n",
       "2                    0.11             0.88               7   \n",
       "3                    0.72             0.87               5   \n",
       "4                    0.37             0.52               2   \n",
       "...                   ...              ...             ...   \n",
       "14994                0.40             0.57               2   \n",
       "14995                0.37             0.48               2   \n",
       "14996                0.37             0.53               2   \n",
       "14997                0.11             0.96               6   \n",
       "14998                0.37             0.52               2   \n",
       "\n",
       "       average_montly_hours  time_spend_company  Work_accident  left  \\\n",
       "0                       157                   3              0     1   \n",
       "1                       262                   6              0     1   \n",
       "2                       272                   4              0     1   \n",
       "3                       223                   5              0     1   \n",
       "4                       159                   3              0     1   \n",
       "...                     ...                 ...            ...   ...   \n",
       "14994                   151                   3              0     1   \n",
       "14995                   160                   3              0     1   \n",
       "14996                   143                   3              0     1   \n",
       "14997                   280                   4              0     1   \n",
       "14998                   158                   3              0     1   \n",
       "\n",
       "       promotion_last_5years department  salary  \n",
       "0                          0      sales     low  \n",
       "1                          0      sales  medium  \n",
       "2                          0      sales  medium  \n",
       "3                          0      sales     low  \n",
       "4                          0      sales     low  \n",
       "...                      ...        ...     ...  \n",
       "14994                      0    support     low  \n",
       "14995                      0    support     low  \n",
       "14996                      0    support     low  \n",
       "14997                      0    support     low  \n",
       "14998                      0    support     low  \n",
       "\n",
       "[14999 rows x 10 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr = pd.read_csv('HR.csv')\n",
    "hr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Признаки:\n",
    "# 1.satisfaction_level​ - Уровень удовлетворенности работой\n",
    "# 2.Last_evaluation ​- Время с момента последней оценки в годах\n",
    "# 3.number_projects​ - Количество проектов, выполненных за время работы\n",
    "# 4.average_monthly_hours​ - Среднее количество часов на рабочем месте в месяц\n",
    "# 5.time_spend_company​ - Стаж работы в компании в годах\n",
    "# 6.work_accident​ - Происходили ли несчастные случаи на рабочем месте с сотрудником\n",
    "# 7.left​ - уволился ли сотрудник\n",
    "# 8.promotion_last_5years​ - повышался ли сотрудник за последние пять лет\n",
    "# 9.department ​- отдел в котором работает сотрудник\n",
    "# 10.salary​ - относительный уровень зарплаты"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2. Рассчитайте основные статистики для переменных(среднее,медиана,мода,мин/макс,сред.отклонение)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>last_evaluation</th>\n",
       "      <th>number_project</th>\n",
       "      <th>average_montly_hours</th>\n",
       "      <th>time_spend_company</th>\n",
       "      <th>Work_accident</th>\n",
       "      <th>left</th>\n",
       "      <th>promotion_last_5years</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>14999.000000</td>\n",
       "      <td>14999.000000</td>\n",
       "      <td>14999.000000</td>\n",
       "      <td>14999.000000</td>\n",
       "      <td>14999.000000</td>\n",
       "      <td>14999.000000</td>\n",
       "      <td>14999.000000</td>\n",
       "      <td>14999.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.612834</td>\n",
       "      <td>0.716102</td>\n",
       "      <td>3.803054</td>\n",
       "      <td>201.050337</td>\n",
       "      <td>3.498233</td>\n",
       "      <td>0.144610</td>\n",
       "      <td>0.238083</td>\n",
       "      <td>0.021268</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.248631</td>\n",
       "      <td>0.171169</td>\n",
       "      <td>1.232592</td>\n",
       "      <td>49.943099</td>\n",
       "      <td>1.460136</td>\n",
       "      <td>0.351719</td>\n",
       "      <td>0.425924</td>\n",
       "      <td>0.144281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.090000</td>\n",
       "      <td>0.360000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>96.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.440000</td>\n",
       "      <td>0.560000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>156.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.640000</td>\n",
       "      <td>0.720000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.820000</td>\n",
       "      <td>0.870000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>245.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>310.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       satisfaction_level  last_evaluation  number_project  \\\n",
       "count        14999.000000     14999.000000    14999.000000   \n",
       "mean             0.612834         0.716102        3.803054   \n",
       "std              0.248631         0.171169        1.232592   \n",
       "min              0.090000         0.360000        2.000000   \n",
       "25%              0.440000         0.560000        3.000000   \n",
       "50%              0.640000         0.720000        4.000000   \n",
       "75%              0.820000         0.870000        5.000000   \n",
       "max              1.000000         1.000000        7.000000   \n",
       "\n",
       "       average_montly_hours  time_spend_company  Work_accident          left  \\\n",
       "count          14999.000000        14999.000000   14999.000000  14999.000000   \n",
       "mean             201.050337            3.498233       0.144610      0.238083   \n",
       "std               49.943099            1.460136       0.351719      0.425924   \n",
       "min               96.000000            2.000000       0.000000      0.000000   \n",
       "25%              156.000000            3.000000       0.000000      0.000000   \n",
       "50%              200.000000            3.000000       0.000000      0.000000   \n",
       "75%              245.000000            4.000000       0.000000      0.000000   \n",
       "max              310.000000           10.000000       1.000000      1.000000   \n",
       "\n",
       "       promotion_last_5years  \n",
       "count           14999.000000  \n",
       "mean                0.021268  \n",
       "std                 0.144281  \n",
       "min                 0.000000  \n",
       "25%                 0.000000  \n",
       "50%                 0.000000  \n",
       "75%                 0.000000  \n",
       "max                 1.000000  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.1 0.55 4 135 3 0 0 0\n"
     ]
    }
   ],
   "source": [
    "print(hr.satisfaction_level.mode()[0], hr.last_evaluation.mode()[0], hr.number_project.mode()[0],\n",
    "      hr.average_montly_hours.mode()[0], hr.time_spend_company.mode()[0], hr.Work_accident.mode()[0],\n",
    "      hr.left.mode()[0],hr.promotion_last_5years.mode()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 3. Рассчитайте и визуализировать корреляционную матрицу дляколичественных переменных.Определите две самые скоррелированные и две наименеескоррелированные переменные."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>last_evaluation</th>\n",
       "      <th>number_project</th>\n",
       "      <th>average_montly_hours</th>\n",
       "      <th>time_spend_company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>satisfaction_level</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.105021</td>\n",
       "      <td>-0.142970</td>\n",
       "      <td>-0.020048</td>\n",
       "      <td>-0.100866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>last_evaluation</th>\n",
       "      <td>0.105021</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.349333</td>\n",
       "      <td>0.339742</td>\n",
       "      <td>0.131591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>number_project</th>\n",
       "      <td>-0.142970</td>\n",
       "      <td>0.349333</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.417211</td>\n",
       "      <td>0.196786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>average_montly_hours</th>\n",
       "      <td>-0.020048</td>\n",
       "      <td>0.339742</td>\n",
       "      <td>0.417211</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.127755</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time_spend_company</th>\n",
       "      <td>-0.100866</td>\n",
       "      <td>0.131591</td>\n",
       "      <td>0.196786</td>\n",
       "      <td>0.127755</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      satisfaction_level  last_evaluation  number_project  \\\n",
       "satisfaction_level              1.000000         0.105021       -0.142970   \n",
       "last_evaluation                 0.105021         1.000000        0.349333   \n",
       "number_project                 -0.142970         0.349333        1.000000   \n",
       "average_montly_hours           -0.020048         0.339742        0.417211   \n",
       "time_spend_company             -0.100866         0.131591        0.196786   \n",
       "\n",
       "                      average_montly_hours  time_spend_company  \n",
       "satisfaction_level               -0.020048           -0.100866  \n",
       "last_evaluation                   0.339742            0.131591  \n",
       "number_project                    0.417211            0.196786  \n",
       "average_montly_hours              1.000000            0.127755  \n",
       "time_spend_company                0.127755            1.000000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr2 = hr[['satisfaction_level', 'last_evaluation', 'number_project', 'average_montly_hours', 'time_spend_company']]\n",
    "hr2.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x16955470430>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# sns.set(rc={'figure.figsize': (11.7, 8.27)})\n",
    "sns.heatmap(hr2.corr(), annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Две наименее скоррелированные переменные - average_montly_hours к satisfaction_level, то есть среднее количество \n",
    "# часов на рабочем месте в месяц к уровню удовлетворенности работой. \n",
    "# Наиболее скореллированные переменные - number_project к average_montly_hours, то есть количество проектов, \n",
    "# выполненных за время работы к среднему количеству часов на рабочем месте."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 4. Рассчитайте сколько сотрудников работает в каждомдепартаменте."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['sales', 'accounting', 'hr', 'technical', 'support', 'management',\n",
       "       'IT', 'product_mng', 'marketing', 'RandD'], dtype=object)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr.department.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Большая часть сотрудников работала в отделах sales, technical, support"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "sales          4140\n",
       "technical      2720\n",
       "support        2229\n",
       "IT             1227\n",
       "product_mng     902\n",
       "marketing       858\n",
       "RandD           787\n",
       "accounting      767\n",
       "hr              739\n",
       "management      630\n",
       "Name: department, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr['department'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Распределение доли сотрудников по департаментам в процентном соотношении:\n",
      "sales          28.0\n",
      "technical      18.0\n",
      "support        15.0\n",
      "IT              8.0\n",
      "product_mng     6.0\n",
      "marketing       6.0\n",
      "RandD           5.0\n",
      "accounting      5.0\n",
      "hr              5.0\n",
      "management      4.0\n",
      "Name: department, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "dist = round(hr['department'].value_counts()*100/sum(hr['department'].value_counts()))\n",
    "print(f'\\nРаспределение доли сотрудников по департаментам в процентном соотношении:\\n{dist}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 5. Показать распределение сотрудников по зарплатам."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "low       7316\n",
      "medium    6446\n",
      "high      1237\n",
      "Name: salary, dtype: int64\n",
      "\n",
      "Распределение доли сотрудников с уровнем заработной платы в процентном соотношении:\n",
      " low       49.0\n",
      "medium    43.0\n",
      "high       8.0\n",
      "Name: salary, dtype: float64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x16955be8760>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(hr['salary'].value_counts())\n",
    "print('\\nРаспределение доли сотрудников с уровнем заработной платы в процентном соотношении:\\n'\n",
    "      , round(hr['salary'].value_counts()*100/sum(hr['salary'].value_counts())))\n",
    "pic = hr['salary'].value_counts()\n",
    "pic.plot.bar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Большая часть сотрудников имела низкий и средний уровни зарплаты - 92% в сумме, с высоким уровнем дохода всего лишь 8%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 6. Показать распределение сотрудников по зарплатам в каждомдепартаменте по отдельности"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>satisfaction_level</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>department</th>\n",
       "      <th>salary</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">IT</th>\n",
       "      <th>high</th>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>609</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">RandD</th>\n",
       "      <th>high</th>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">accounting</th>\n",
       "      <th>high</th>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">hr</th>\n",
       "      <th>high</th>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">management</th>\n",
       "      <th>high</th>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">marketing</th>\n",
       "      <th>high</th>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">product_mng</th>\n",
       "      <th>high</th>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">sales</th>\n",
       "      <th>high</th>\n",
       "      <td>269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>2099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>1772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">support</th>\n",
       "      <th>high</th>\n",
       "      <td>141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>1146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">technical</th>\n",
       "      <th>high</th>\n",
       "      <td>201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>1372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>1147</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    satisfaction_level\n",
       "department  salary                    \n",
       "IT          high                    83\n",
       "            low                    609\n",
       "            medium                 535\n",
       "RandD       high                    51\n",
       "            low                    364\n",
       "            medium                 372\n",
       "accounting  high                    74\n",
       "            low                    358\n",
       "            medium                 335\n",
       "hr          high                    45\n",
       "            low                    335\n",
       "            medium                 359\n",
       "management  high                   225\n",
       "            low                    180\n",
       "            medium                 225\n",
       "marketing   high                    80\n",
       "            low                    402\n",
       "            medium                 376\n",
       "product_mng high                    68\n",
       "            low                    451\n",
       "            medium                 383\n",
       "sales       high                   269\n",
       "            low                   2099\n",
       "            medium                1772\n",
       "support     high                   141\n",
       "            low                   1146\n",
       "            medium                 942\n",
       "technical   high                   201\n",
       "            low                   1372\n",
       "            medium                1147"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distribution = hr[['department', 'salary', 'satisfaction_level']]\n",
    "distribution = distribution.groupby(['department', 'salary']).count()\n",
    "distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x16955c431c0>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pylab import rcParams\n",
    "rcParams['figure.figsize'] = 15,6\n",
    "\n",
    "dist_table = hr[['department', 'salary', 'satisfaction_level']]\n",
    "dist_table = dist_table.pivot_table('satisfaction_level', \n",
    "                                    index = 'department', columns = 'salary', aggfunc = 'count')\n",
    "dist_table.plot.bar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Все, за исключением management, показывают, что сотрудники низким и средним с уровнем зарплаты преобладают над высоким уровнем зарплаты. \n",
    "# В management же высокий и средний уровень зарплаты выше, чем низкий уровень и находятся примерно на одном же уровне."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 7. Проверить гипотезу, что сотрудники с высоким окладомпроводят на работе больше времени, чем сотрудники с низкимокладом"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Уровень рабочих часов в месяц по сотрудникам с разным уровнем дохода')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "high = hr[hr['salary'] == 'high']['average_montly_hours']\n",
    "low = hr[hr['salary'] == 'low']['average_montly_hours']\n",
    "sns.distplot(low) \n",
    "sns.distplot(high)\n",
    "plt.legend(['Сотрудники с низким окладом', 'Сотрудники с высоким окладом'])\n",
    "plt.title('Уровень рабочих часов в месяц по сотрудникам с разным уровнем дохода')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Ttest_indResult(statistic=-0.7288680398062308, pvalue=0.4661023478267259)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy  import stats\n",
    "%matplotlib inline\n",
    "stats.ttest_ind(high, low)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Существенной разницы в количестве отработанных часов у сотрудников с низкой и высокой зарплатой не наблюдается. \n",
    "# Следовательно данную гипотезу мы опровергаем."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 8. Рассчитать следующие показатели среди уволившихся и неуволившихся сотрудников (по отдельности):\n",
    "    # ●Доля сотрудников с повышением за последние 5 лет\n",
    "    # ●Средняя степень удовлетворенности\n",
    "    # ●Среднее количество проектов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>left</th>\n",
       "      <th>promotion_last_5years</th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>number_project</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.38</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.80</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.11</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.72</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.37</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14994</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.40</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14995</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.37</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14996</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.37</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14997</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.11</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14998</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.37</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14999 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       left  promotion_last_5years  satisfaction_level  number_project\n",
       "0         1                      0                0.38               2\n",
       "1         1                      0                0.80               5\n",
       "2         1                      0                0.11               7\n",
       "3         1                      0                0.72               5\n",
       "4         1                      0                0.37               2\n",
       "...     ...                    ...                 ...             ...\n",
       "14994     1                      0                0.40               2\n",
       "14995     1                      0                0.37               2\n",
       "14996     1                      0                0.37               2\n",
       "14997     1                      0                0.11               6\n",
       "14998     1                      0                0.37               2\n",
       "\n",
       "[14999 rows x 4 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr_filt = hr[['left', 'promotion_last_5years', 'satisfaction_level', 'number_project']]\n",
    "hr_filt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>promotion_last_5years</th>\n",
       "      <th>left</th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>number_project</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3552</td>\n",
       "      <td>3552</td>\n",
       "      <td>3552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   promotion_last_5years  left  satisfaction_level  number_project\n",
       "0                      0  3552                3552            3552\n",
       "1                      1    19                  19              19"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr_filt_left = hr_filt[(hr_filt['left'] == 1)]\n",
    "hr_filt_left.groupby('promotion_last_5years').count().reset_index()\n",
    "# hr_filt_left = hr_filt_left[['promotion_last_5years', 'left']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "diag_left = hr_filt_left.promotion_last_5years.value_counts()\n",
    "diag_left.plot(kind='pie',\n",
    "                   title='Доля сотрудников с/без повышения за последние 5 лет среди уволившихся',\n",
    "                   ylabel = '').legend(['Без повышения','С повышением'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Среди уволившихся сотрудников доля без повышения значительно преобладает над теми, у кого было повышение.\n",
    "# Посмотрим теперь на тех, кто не уволился."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>promotion_last_5years</th>\n",
       "      <th>left</th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>number_project</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>11128</td>\n",
       "      <td>11128</td>\n",
       "      <td>11128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>300</td>\n",
       "      <td>300</td>\n",
       "      <td>300</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   promotion_last_5years   left  satisfaction_level  number_project\n",
       "0                      0  11128               11128           11128\n",
       "1                      1    300                 300             300"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr_filt_noleft = hr_filt[(hr_filt['left'] == 0)]\n",
    "hr_filt_noleft.groupby('promotion_last_5years').count().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "diag_noleft = hr_filt_noleft.promotion_last_5years.value_counts()\n",
    "diag_noleft.plot(kind='pie',\n",
    "                  title='Доля сотрудников с/без повышения за последние 5 лет среди не увольнявшихся',\n",
    "                  ylabel = '').legend(['Без повышения','С повышением'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Можно посчитать в доли по данным в % соотношении (97 и 3%)\n",
    "# Доля сотрудников из тех, кто не уволился чуть больше, чем в предыдущем сравнении."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>left</th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>number_project</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.666810</td>\n",
       "      <td>3.786664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.440098</td>\n",
       "      <td>3.855503</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   left  satisfaction_level  number_project\n",
       "0     0            0.666810        3.786664\n",
       "1     1            0.440098        3.855503"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hr_filt.groupby(['left']).agg({'satisfaction_level': 'mean', 'number_project': 'mean'}).reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1695229e250>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ff = hr_filt.groupby(['left']).agg({'satisfaction_level': 'mean', 'number_project': 'mean'}).reset_index()\n",
    "ff.satisfaction_level.plot(kind='bar', \n",
    "                           title='Уровень удовлетворенности работой среди сотрудников').legend(\n",
    "    ['Уровень удовлетворенности у: 0- работающие сотрудники, 1- уволились'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Среднеарифметическая доля среди сотрудников уволившихся и работающих по параметру удовлетворенности работой: 66% - у \n",
    "# работающих сотрудников и 44% - у сотрудников, которые уволились. БОльшая часть сотрудников, что уволилась, была недовольна своей работой.\n",
    "# Незначительное превышение идет у сотрудников, уволившихся с работы, но она настолько незначительна, \n",
    "# что мы можем не обращать на это внимания.\n",
    "# Наиболее вероятная причина, почему сотрудник уволился - неудовлетворенность своей работой."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 9. Разделить данные на тестовую и обучающую выборкиПостроить модель LDA, предсказывающую уволился лисотрудник на основе имеющихся факторов (кроме department иsalary)Оценить качество модели на тестовой выборки"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>satisfaction_level</th>\n",
       "      <th>last_evaluation</th>\n",
       "      <th>number_project</th>\n",
       "      <th>average_montly_hours</th>\n",
       "      <th>time_spend_company</th>\n",
       "      <th>Work_accident</th>\n",
       "      <th>promotion_last_5years</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.38</td>\n",
       "      <td>0.53</td>\n",
       "      <td>2</td>\n",
       "      <td>157</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.80</td>\n",
       "      <td>0.86</td>\n",
       "      <td>5</td>\n",
       "      <td>262</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.11</td>\n",
       "      <td>0.88</td>\n",
       "      <td>7</td>\n",
       "      <td>272</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.72</td>\n",
       "      <td>0.87</td>\n",
       "      <td>5</td>\n",
       "      <td>223</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.37</td>\n",
       "      <td>0.52</td>\n",
       "      <td>2</td>\n",
       "      <td>159</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   satisfaction_level  last_evaluation  number_project  average_montly_hours  \\\n",
       "0                0.38             0.53               2                   157   \n",
       "1                0.80             0.86               5                   262   \n",
       "2                0.11             0.88               7                   272   \n",
       "3                0.72             0.87               5                   223   \n",
       "4                0.37             0.52               2                   159   \n",
       "\n",
       "   time_spend_company  Work_accident  promotion_last_5years  \n",
       "0                   3              0                      0  \n",
       "1                   6              0                      0  \n",
       "2                   4              0                      0  \n",
       "3                   5              0                      0  \n",
       "4                   3              0                      0  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = hr[['satisfaction_level', 'last_evaluation', \n",
    "           'number_project', 'average_montly_hours', \n",
    "           'time_spend_company', 'Work_accident', 'promotion_last_5years']]\n",
    "data_left = hr[['left']]   #выделим показатель left в отдельный df, он будет у нас для сравнения\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(data, data_left.values.ravel(), test_size=0.26)\n",
    "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis   # импортируем LDA-функционал\n",
    "lda = LinearDiscriminantAnalysis()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearDiscriminantAnalysis()"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lda.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 0, 0, ..., 0, 0, 1], dtype=int64)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lda.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3895</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3896</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3897</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3898</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3899</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3900 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      0  1\n",
       "0     0  1\n",
       "1     0  0\n",
       "2     1  0\n",
       "3     0  0\n",
       "4     0  0\n",
       "...  .. ..\n",
       "3895  0  0\n",
       "3896  0  0\n",
       "3897  1  0\n",
       "3898  0  0\n",
       "3899  0  1\n",
       "\n",
       "[3900 rows x 2 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = pd.DataFrame([y_test, lda.predict(x_test)]).T\n",
    "result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7533333333333333"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy_score(y_test, lda.predict(x_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Модель с вероятностью 76,54%, даст ответ уволится ли сотрудник в дальнейшем или нет.\n",
    "# Не совсем идеальный результат, но процент довольно таки большой - 3/4 правильных прогнозов. Ее можно применять в опросах \n",
    "# на выявление возможного решения увольнения сотрудника в будущем."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-4.54961733e+00,  6.69168748e-01, -2.29606810e-01,\n",
       "         4.41278284e-03,  2.38473476e-01, -1.03261878e+00,\n",
       "        -1.12669496e+00]])"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lda.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Наибольший вес, в определении модели уволится сотрудник или нет, имеет первый показатель - satisfaction_level \n",
    "# (уровень удовлетворенности работой). Слабо оказывают влияние: number_project, average_montly_hours, time_spend_company."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
